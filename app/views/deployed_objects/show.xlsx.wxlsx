    ### Exports the parameters attached to @parameters_lists in a Workbook
    #workbook = WriteXLSX.new("./public/#{@business_object.code}_parameters.xlsx")
    title = workbook.add_format(:font  => 'Calibri', :size  => 16, :color => 'blue', :bold  => 1)
    header = workbook.add_format(:font  => 'Calibri', :size  => 12, :color => 'black', :bold  => 1)
    data = workbook.add_format(:font  => 'Calibri', :size  => 10, :color => 'black', :bold  => 0)
    data_url = workbook.add_format(:font  => 'Calibri', :size  => 10, :color => 'blue', :underline => 1)
    data_change = workbook.add_format(:font  => 'Calibri', :size  => 10, :bg_color => 'grey', :color => 'white', :bold  => 1)
    data_change_url = workbook.add_format(:font  => 'Calibri', :size  => 10, :color => 'blue', :bg_color => 'grey', :underline => 1)

    workbook.set_properties(
    :title    => "DSD export: #{@business_object.code}",
    :subject  => 'This file contains exported list of Used Variables',
    :author   => 'Open Data Quality',
    :comments => translation_for(@business_object.name_translations)
    #,
    #:hyperlink_base => url_for @business_object
    )

    # write description sheet
    cover = workbook.add_worksheet('DSD')
    cover.write(0, 0, @business_object.code, title)
    cover.write(1, 0, translation_for(@business_object.name_translations), header)
    line_index = 3
    @business_object.attributes.slice("id", "code", "workflow_state", "physical_name").map do |name, value|
      cover.write(line_index, 0, name, header)
      cover.write(line_index, 1, value, data)
      line_index += 1
    end

    # write data sheet
    if @business_object.deployed_skills.any?
      data_sheet = workbook.add_worksheet('Used Variables')
      index = 0
      nb_languages = list_of_languages.length
      ## Headers
      # Write identification headers
      data_sheet.merge_range(0, 0, 0, 2, 'VARIABLE', header)
      data_sheet.merge_range(0, 3, 0, 2 + nb_languages * 2, 'TRANSLATIONS', header)
      data_sheet.merge_range(0, 3 + nb_languages * 2, 1, 5 + nb_languages * 2, 'TECHNICAL DATA', header)
      data_sheet.merge_range(1, 0, 1, 2, 'Identification', header)
      data_sheet.merge_range(1, 3, 1, 2 + nb_languages, 'Name', header)
      data_sheet.merge_range(1, 3 + nb_languages, 1, 2 + nb_languages * 2, 'Description', header)
      data_sheet.write(2, 0, 'ID', header)
      data_sheet.write(2, 1, 'CODE', header)
      data_sheet.write(2, 2, 'TYPE', header)
      data_sheet.write_row(2, 3 + nb_languages * 2, ['Class', 'Object_Id', 'UUID'] , header)

      # Add translations headers
      col_index = 3
      list_of_languages.order(:property).each do |locution|
        data_sheet.write(2, col_index, "Name_#{locution.code}", header)
        col_index += 1
      end
      list_of_languages.order(:property).each do |locution|
        data_sheet.write(2, col_index, "Desc_#{locution.code}", header)
        col_index += 1
      end

      # Add annotations headers (to do)

      ## Data
      current_variable_id = 0
      line_index = 3
      @linked_skills.each do |variable|

        # Print new defined variable
        if variable.defined_variable_id != current_variable_id
          data_sheet.write_row(line_index, 0, [variable.defined_variable_id, variable.defined_variable_code, variable.data_type], data_change)
          data_sheet.write_url(line_index, 1, "http://#{Rails.application.config.action_mailer.default_url_options[:host]}/defined_variables/#{variable.defined_variable_id}", data_change_url, variable.defined_variable_code)
          data_sheet.write_row(line_index, 3 + nb_languages * 2, ['Skill', variable.defined_variable_id], data_change)

          # Add translations for defined variable
          col_index = 3

          # Names
          translations = Translation.where(document_id: variable.defined_variable_id, document_type: 'Skill', field_name: 'name').select('language','translation')
          list_of_languages.order(:property).each do |locution|
            if translations.find { |x| x["language"] == locution.property }
              data_sheet.write(line_index, col_index, translations.find { |x| x["language"] == locution.property }.translation, data_change)
            end
            col_index += 1
          end

          # Descriptions
          translations = Translation.where(document_id: variable.defined_variable_id, document_type: 'Skill', field_name: 'description').select('language','translation')
          list_of_languages.order(:property).each do |locution|
            if translations.find { |x| x["language"] == locution.property }
              data_sheet.write(line_index, col_index, translations.find { |x| x["language"] == locution.property }.translation, data_change)
            end
            col_index += 1
          end

          line_index += 1
          current_variable_id = variable.defined_variable_id
        end

        # Print associated used variables
        data_sheet.write_row(line_index, 0, [variable.used_variable_id, variable.used_variable_code], data)
        data_sheet.write_url(line_index, 1, "http://#{Rails.application.config.action_mailer.default_url_options[:host]}/used_variables/#{variable.used_variable_id}", data_url, variable.used_variable_code)
        data_sheet.write_row(line_index, 3 + nb_languages * 2, ['Skill', variable.used_variable_id], data_change)

        # Add translations for used variable
        col_index = 3

        # Names
        translations = Translation.where(document_id: variable.used_variable_id, document_type: 'Skill', field_name: 'name').select('language','translation')
        list_of_languages.order(:property).each do |locution|
          if translations.find { |x| x["language"] == locution.property }
            data_sheet.write(line_index, col_index, translations.find { |x| x["language"] == locution.property }.translation, data)
          end
          col_index += 1
        end

        # Descriptions
        translations = Translation.where(document_id: variable.used_variable_id, document_type: 'Skill', field_name: 'description').select('language','translation')
        list_of_languages.order(:property).each do |locution|
          if translations.find { |x| x["language"] == locution.property }
            data_sheet.write(line_index, col_index, translations.find { |x| x["language"] == locution.property }.translation, data)
          end
          col_index += 1
        end

        line_index += 1
      end
        # Add annotations (to do)

    end
    # close workbook
    #workbook.close
